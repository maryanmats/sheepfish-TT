{"version":3,"file":"static/js/200.d3d343d6.chunk.js","mappings":"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","sources":["utils/getProductById.ts","../node_modules/@chakra-ui/card/src/card-context.tsx","../node_modules/@chakra-ui/card/src/card.tsx","../node_modules/@chakra-ui/card/src/card-body.tsx","../node_modules/@chakra-ui/card/src/card-footer.tsx","components/ProductDetails.tsx","../node_modules/@chakra-ui/image/src/native-image.tsx","../node_modules/@chakra-ui/image/src/use-image.ts","../node_modules/@chakra-ui/image/src/image.tsx","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/layout/src/center.tsx","../node_modules/@chakra-ui/layout/src/stack/stack-item.tsx","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/src/stack/stack.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.utils.tsx","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["import { useAppSelector } from \"../store/hooks\";\nimport { selectProducts } from \"../store/productsSlice\";\n\nfunction getProductById(id: number) {\n  // eslint-disable-next-line\n\tconst products = useAppSelector(selectProducts);\n\tconst product = products.find((product) => product.id === id);\n\n\treturn product;\n}\n\nexport default getProductById;\n","import { createStylesContext } from \"@chakra-ui/system\"\n\nexport const [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { CardStylesProvider } from \"./card-context\"\n\nexport type CardOptions = {\n  /**\n   * The flex direction of the card\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * The flex alignment of the card\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The flex distribution of the card\n   */\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport interface CardProps\n  extends HTMLChakraProps<\"div\">,\n    CardOptions,\n    ThemingProps<\"Card\"> {}\n\nexport const Card = forwardRef<CardProps, \"div\">(function Card(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Card\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card\", className)}\n      __css={{\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container,\n      }}\n      {...rest}\n    >\n      <CardStylesProvider value={styles}>{children}</CardStylesProvider>\n    </chakra.div>\n  )\n})\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardBodyProps extends HTMLChakraProps<\"div\"> {}\n\nexport const CardBody = forwardRef<CardBodyProps, \"div\">(function CardBody(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  const styles = useCardStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-card__body\", className)}\n      __css={styles.body}\n      {...rest}\n    />\n  )\n})\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  forwardRef,\n  HTMLChakraProps,\n  chakra,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { useCardStyles } from \"./card-context\"\n\nexport interface CardFooterProps extends HTMLChakraProps<\"div\"> {\n  justify?: SystemProps[\"justifyContent\"]\n}\n\nexport const CardFooter = forwardRef<CardFooterProps, \"div\">(\n  function CardFooter(props, ref) {\n    const { className, justify, ...rest } = props\n    const styles = useCardStyles()\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-card__footer\", className)}\n        __css={{\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer,\n        }}\n        {...rest}\n      />\n    )\n  },\n)\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport getProductById from \"../utils/getProductById\";\nimport {\n\tAlert,\n\tAlertDescription,\n\tAlertIcon,\n\tAlertTitle,\n\tButton,\n\tCard,\n\tCardBody,\n\tText,\n\tImage,\n\tCardFooter,\n\tHeading,\n\tStack,\n\tCenter,\n\tuseToast,\n} from '@chakra-ui/react';\n\nfunction ProductDetails() {\n\tconst { productId } = useParams();\n\tconst toast = useToast();\n\n\tif (!productId) return null;\n\n\tconst product = getProductById(parseInt(productId, 10));\n\n\tif (!product) {\n\t\treturn (\n\t\t\t<Alert status='error'>\n\t\t\t\t<AlertIcon />\n\t\t\t\t<AlertTitle>Product not found!</AlertTitle>\n\t\t\t\t<AlertDescription>\n\t\t\t\t\tYou may have entered an incorrect id.\n\t\t\t\t</AlertDescription>\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Center>\n\t\t\t<Card\n\t\t\t\tdirection={{ base: 'column', sm: 'row' }}\n\t\t\t\toverflow='hidden'\n\t\t\t\tvariant='outline'\n\t\t\t\tmaxWidth='fit-content'\n\t\t\t>\n\t\t\t\t<Image\n\t\t\t\t\tobjectFit='cover'\n\t\t\t\t\tmaxWidth={{ base: '100%', sm: '200px' }}\n\t\t\t\t\tsrc={product.thumbnail}\n\t\t\t\t\talt={product.title}\n\t\t\t\t/>\n\n\t\t\t\t<Stack>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t<Heading size='md'>{product.title}</Heading>\n\n\t\t\t\t\t\t<Text py='2'>{product.description}</Text>\n\t\t\t\t\t</CardBody>\n\n\t\t\t\t\t<CardFooter>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant='solid'\n\t\t\t\t\t\t\tcolorScheme='blue'\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\t\t\t\ttitle: `${product.title} added to cart.`,\n\t\t\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\t\t'You can pay for the goods and order delivery in your cart.',\n\t\t\t\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\t\t\t\tduration: 9000,\n\t\t\t\t\t\t\t\t\tisClosable: true,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBuy Latte\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</CardFooter>\n\t\t\t\t</Stack>\n\t\t\t</Card>\n\t\t</Center>\n\t);\n}\n\nexport default ProductDetails;\n","import { PropsOf, forwardRef } from \"@chakra-ui/system\"\n\nexport interface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nexport const NativeImage = forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\nNativeImage.displayName = \"NativeImage\"\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n","import {\n  chakra,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport {\n  FallbackStrategy,\n  shouldShowFallbackImage,\n  useImage,\n  UseImageProps,\n} from \"./use-image\"\nimport { NativeImage, NativeImageOptions } from \"./native-image\"\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note 🚨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n\n  /**\n   * - beforeLoadOrError(default): loads the fallbackImage while loading the src\n   * - onError: loads the fallbackImage only if there is an error fetching the src\n   *\n   * @default \"beforeLoadOrError\"\n   * @see Issue https://github.com/chakra-ui/chakra-ui/issues/5581\n   */\n  fallbackStrategy?: FallbackStrategy\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   * @type React.HTMLAttributeReferrerPolicy\n   */\n  referrerPolicy?: React.HTMLAttributeReferrerPolicy\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props\n\n  const providedFallback = fallbackSrc !== undefined || fallback !== undefined\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n  const shouldIgnoreFallbackImage =\n    loading != null ||\n    // use can opt out of fallback image\n    ignoreFallback ||\n    // if the user doesn't provide any kind of fallback we should ignore it\n    !providedFallback\n\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage,\n  })\n\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy)\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      srcSet={srcSet}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nImage.displayName = \"Image\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n","import { ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nStackItem.displayName = \"StackItem\"\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cloneElement, Fragment, useMemo } from \"react\"\n\nimport { StackItem } from \"./stack-item\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   * @default \"0.5rem\"\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   * @default \"column\"\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   *\n   * @default false\n   *\n   * @deprecated - Use `direction=\"row\"` or `HStack` instead\n   */\n  isInline?: boolean\n}\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children)\n    return shouldUseChildren\n      ? validChildren\n      : validChildren.map((child, index) => {\n          // Prefer provided child key, fallback to index\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n          const isLast = index + 1 === validChildren.length\n          const wrappedChild = <StackItem key={key}>{child}</StackItem>\n          const _child = shouldWrapChildren ? wrappedChild : child\n\n          if (!hasDivider) return _child\n\n          const clonedDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerStyle,\n            },\n          )\n\n          const _divider = isLast ? null : clonedDivider\n\n          return (\n            <Fragment key={key}>\n              {_child}\n              {_divider}\n            </Fragment>\n          )\n        })\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children,\n  ])\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={direction}\n      flexWrap={wrap}\n      gap={hasDivider ? undefined : spacing}\n      className={_className}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nStack.displayName = \"Stack\"\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value: keyof typeof dividerStyles) => dividerStyles[value],\n    ),\n  }\n}\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["id","useAppSelector","selectProducts","find","product","_createStylesContext","createStylesContext","_createStylesContext2","_slicedToArray","CardStylesProvider","useCardStyles","Card","forwardRef","props","ref","_omitThemingProps","omitThemingProps","className","children","_omitThemingProps$dir","direction","justify","align","rest","_objectWithoutProperties","_excluded","styles","useMultiStyleConfig","jsx","chakra","div","_objectSpread","cx","__css","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","value","CardBody","body","CardFooter","footer","productId","useParams","toast","useToast","getProductById","parseInt","_jsx","Center","_jsxs","base","sm","overflow","variant","maxWidth","Image","objectFit","src","thumbnail","alt","title","Stack","Heading","size","Text","py","description","Button","colorScheme","onClick","concat","status","duration","isClosable","Alert","AlertIcon","AlertTitle","AlertDescription","NativeImage","htmlWidth","htmlHeight","width","height","displayName","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","onLoad","onError","sizes","_useState","useState","_useState2","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectPosition","object","_step","keysToOmit","arguments","length","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","s","n","done","key","err","e","f","omit","as","baseStyle","centerStyles","horizontal","insetStart","transform","vertical","top","both","_props$axis","axis","StackItem","flex","freeze","isInline","directionProp","_props$spacing","spacing","wrap","divider","shouldWrapChildren","dividerStyle","useMemo","options","prop","mapper","dividerStyles","column","my","mx","borderLeftWidth","borderBottomWidth","row","Array","isArray","map","item","isObject","keys","reduce","result","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","toArray","filter","child","isValidElement","getValidChildren","index","isLast","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","flexWrap","gap"],"sourceRoot":""}